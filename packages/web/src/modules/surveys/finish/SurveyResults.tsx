import React, { useState, useEffect } from 'react';
import {
  Layout,
  Divider,
  Typography,
  Steps,
  Button,
  Row,
  Descriptions
} from 'antd';

import styles from './styles.styl';
import Status from './Status';

type Props = {
  probability: number;
};

const { Title } = Typography;
const { Content } = Layout;
const { Step } = Steps;

const steps = [
  {
    title: '–ú–æ–π—Ç–µ —Ä—É–∫–∏',
    content: () => (
      <Descriptions layout="vertical">
        <Descriptions.Item>
          <div style={{ fontSize: 18 }}>
            –í—Å–µ–≥–¥–∞ –º–æ–π—Ç–µ —Ä—É–∫–∏: –∫–æ–≥–¥–∞ –ø—Ä–∏—Ö–æ–¥–∏—Ç–µ –Ω–∞ —Ä–∞–±–æ—Ç—É –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç–µ—Å—å
            –¥–æ–º–æ–π. –î–ª—è –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∏ —Ç–∞–∫–∂–µ –ø–æ–¥–æ–π–¥—É—Ç –≤–ª–∞–∂–Ω—ã–µ —Å–∞–ª—Ñ–µ—Ç–∫–∏ –∏–ª–∏
            –¥–µ–∑–∏–Ω—Ñ–∏—Ü–∏—Ä—É—é—â–∏–µ —Ä–∞—Å—Ç–≤–æ—Ä—ã
          </div>
        </Descriptions.Item>
      </Descriptions>
    )
  },
  {
    title: '–ù–µ —Ç—Ä–æ–≥–∞–π—Ç–µ –ª–∏—Ü–æ —Ä—É–∫–∞–º–∏',
    content: () => (
      <Descriptions layout="vertical">
        <Descriptions.Item>
          <div style={{ fontSize: 18 }}>
            –ù–µ —Ç—Ä–æ–≥–∞–π—Ç–µ –ª–∏—Ü–æ —Ä—É–∫–∞–º–∏ –ù–µ –ø–æ–¥–Ω–æ—Å–∏—Ç–µ —Ä—É–∫–∏ –∫ –Ω–æ—Å—É –∏ –≥–ª–∞–∑–∞–º. –ë—ã—Å—Ç—Ä–µ–µ
            –≤—Å–µ–≥–æ –≤–∏—Ä—É—Å –ø–æ–ø–∞–¥–∞–µ—Ç –≤ –æ—Ä–≥–∞–Ω–∏–∑–º —á–µ—Ä–µ–∑ —Å–ª–∏–∑–∏—Å—Ç—É—é –æ–±–æ–ª–æ—á–∫—É. –ö–æ–≥–¥–∞
            —á–∏—Ö–∞–µ—Ç–µ –≤—Å–µ–≥–¥–∞ –ø—Ä–∏–∫—Ä—ã–≤–∞–π—Ç–µ—Å—å –ø–ª–∞—Ç–∫–æ–º
          </div>
        </Descriptions.Item>
      </Descriptions>
    )
  },
  {
    title: '–ò–∑–±–µ–≥–∞–π—Ç–µ –±–æ–ª—å—à–∏—Ö —Å–∫–æ–ø–ª–µ–Ω–∏–π –ª—é–¥–µ–π',
    content: () => (
      <Descriptions layout="vertical">
        <Descriptions.Item>
          <div style={{ fontSize: 18 }}>
            –ò–∑–±–µ–≥–∞–π—Ç–µ –±–æ–ª—å—à–∏—Ö —Å–∫–æ–ø–ª–µ–Ω–∏–π –ª—é–¥–µ–π –ò–∑–±–µ–≥–∞–π—Ç–µ –Ω–µ–Ω—É–∂–Ω—ã—Ö –ø–æ–µ–∑–¥–æ–∫ –∏ –Ω–µ
            —Ö–æ–¥–∏—Ç–µ –≤ –º–µ—Å—Ç–∞ –º–∞—Å—Å–æ–≤–æ–≥–æ —Å–∫–æ–ø–ª–µ–Ω–∏—è –ª—é–¥–µ–π
          </div>
        </Descriptions.Item>
      </Descriptions>
    )
  },
  {
    title: '–û—Ç–º–µ–Ω–∏—Ç–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è',
    content: () => (
      <Descriptions layout="vertical">
        <Descriptions.Item>
          <div style={{ fontSize: 18 }}>
            –ù–∞ –≤—Ä–µ–º—è, –ø–æ–∫–∞ —Ä–∞–∑–Ω—ã–µ —Å—Ç—Ä–∞–Ω—ã –º–∏—Ä–∞ –±–æ—Ä—é—Ç—Å—è —Å –∫–æ—Ä–æ–Ω–∞ –≤–∏—Ä—É—Å–æ–º, –Ω–µ
            —Å–ª–µ–¥—É–µ—Ç –ø—É—Ç–µ—à–µ—Å—Ç–≤–æ–≤–∞—Ç—å –∑–∞–≥—Ä–∞–Ω–∏—Ü—É. –í –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —Ç—É–¥–∞, –≥–¥–µ —Å–∏—Ç—É–∞—Ü–∏—è —Å
            –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–æ–º –∫—Ä–∞–π–Ω–µ —Ç—è–∂–µ–ª–∞—è
          </div>
        </Descriptions.Item>
      </Descriptions>
    )
  }
];

const getTitleByProbability = (probability: number) => {
  if (probability < 33) {
    return (
      <Title level={2}>
        –£ –≤–∞—Å –Ω–µ–±–æ–ª—å—à–∞—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –∑–∞–±–æ–ª–µ—Ç—å{' '}
        <span style={{ paddingLeft: 8 }} role="img" aria-label="congratius">
          üéâ
        </span>
      </Title>
    );
  }

  if (probability > 33 && probability < 66) {
    return (
      <Title level={2}>
        –ö–∞–∂–µ—Ç—Å—è, –≤—ã –≤–æ—Ç-–≤–æ—Ç –∑–∞–±–æ–ª–µ–µ—Ç–µ{' '}
        <span style={{ paddingLeft: 8 }} role="img" aria-label="congratius">
          üò¢
        </span>
      </Title>
    );
  }

  if (probability > 66) {
    return (
      <Title level={2}>
        –ü—Ä–∏—à–ª–æ –≤—Ä–µ–º—è –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –≤—Ä–∞—á—É{' '}
        <span style={{ paddingLeft: 8 }} role="img" aria-label="congratius">
          üë©‚Äç‚öïÔ∏è
        </span>
      </Title>
    );
  }

  return null;
};

const SurveyResults = (props: Props) => {
  const { probability } = props;
  const [current, setCurrent] = useState(0);

  const handleClickNext = () => setCurrent(current + 1);
  const handleClickPrev = () => setCurrent(current - 1);

  useEffect(() => {
    setTimeout(() => {
      window.scrollTo({ top: 400, behavior: 'smooth' });
    }, 1500);
  }, []);

  return (
    <React.Fragment>
      <Content>
        <Row justify="center">{getTitleByProbability(probability)}</Row>
        <Divider dashed />
        <Steps current={current}>
          {steps.map((item) => (
            <Step key={item.title} title={item.title} />
          ))}
        </Steps>
        <div className={styles['steps-content']}>
          {steps[current].content()}
        </div>
        <div className={styles['steps-action']}>
          {current > 0 && (
            <Button style={{ margin: '0 8px' }} onClick={handleClickPrev}>
              –ü—Ä–µ–¥—ã–¥—É—â–∏–π —Å–æ–≤–µ—Ç
            </Button>
          )}
          {current < steps.length - 1 && (
            <Button type="primary" onClick={handleClickNext}>
              –°–ª–µ–¥—É—â–∏–π —Å–æ–≤–µ—Ç
            </Button>
          )}
        </div>
        <Divider dashed />
        <Row justify="center">
          <Status />
        </Row>
      </Content>
    </React.Fragment>
  );
};

export default SurveyResults;
